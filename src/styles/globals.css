@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  --s: 50px;
  --c: #191b22;
  --_s: calc(2*var(--s)) calc(2*var(--s));
  --_g: 35.36% 35.36% at;
  --_c: #0000 66%,#20222a 68% 70%,#0000 72%;
  background: 
    radial-gradient(var(--_g) 100% 25%,var(--_c)) var(--s) var(--s)/var(--_s), 
    radial-gradient(var(--_g) 0 75%,var(--_c)) var(--s) var(--s)/var(--_s), 
    radial-gradient(var(--_g) 100% 25%,var(--_c)) 0 0/var(--_s), 
    radial-gradient(var(--_g) 0 75%,var(--_c)) 0 0/var(--_s), 
    repeating-conic-gradient(var(--c) 0 25%,#0000 0 50%) 0 0/var(--_s), 
    radial-gradient(var(--_c)) 0 calc(var(--s)/2)/var(--s) var(--s) var(--c);
  background-attachment: fixed;
  
}

a {
  color: inherit;
  text-decoration: none;
  /* margin-right: 2px; */
}

* {
  box-sizing: border-box;
}

/* example: override wallet button style */
.wallet-adapter-button:not([disabled]):hover {
  background-color: #1fbd44;
}


/* ... (previous CSS code) */

.dice-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50vh;
  position: relative; /* Add relative positioning to the container */
 
}


.dice {
  width: 150px;
  height: 150px;
  background-color: white;
  border: 2px solid black;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  cursor: pointer;
  border-radius: 15px;
  transition: background-color 0.3s ease-in-out;
  box-shadow: 0 6px 6px rgba(0, 0, 0, 0.2);
  position: relative; /* Add relative positioning to the dice */
}

/* Add styles for left and right buttons */
.bet-buttons{
  margin-right: 10px; /* Add spacing between rows */
  display: flex;
  align-items: center;
  justify-content: center;
}

.bet-buttons-row {
  display: flex;
  justify-content: center; /* Add space between buttons in the row */
  margin-bottom: 10px; /* Add spacing between rows */
}




/* ... (rest of the CSS code) */



.dice:hover{
  border-color: #1fbd44;
}

.dot {
  width: 25px;
  height: 25px;
  background-color: black;
  border-radius: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
}


.loading-animation-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%; /* Occupy the full width of the dice container */
  height: 100%; /* Occupy the full height of the dice container */
  position: absolute; /* Position it within the dice container */
  top: 0;
  left: 0;
}

.loading-spinner {
  width: 80px; /* Spinner size */
  height: 80px; /* Spinner size */
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loader {
  animation: spin 1s linear infinite;
  border-top: 6px solid #1fbd44; /* Spinner color */
  border-radius: 50%;
  width: 60px; /* Loader size */
  height: 60px; /* Loader size */
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}









/* CSS */
.button-33 {
  background-color: #c2fbd7;
  border-radius: 100px;
  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;
  color: green;
  cursor: pointer;
  display: inline-block;
  font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;
  padding: 7px 20px;
  text-align: center;
  text-decoration: none;
  transition: all 250ms;
  border: 0;
  font-size: 16px;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  margin-left: 10px;
}

.button-33:hover {
  box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;
  transform: scale(1.05) rotate(-1deg);
}

/* Add this CSS to your stylesheet */
.button-33:focus {
  /* Define the styles for the focused button and its adjacent siblings */
  color: rgb(40, 243, 40); /* Green border color for focused button */
  transform: scale(1.1);
}

.button-33-selected {
  background-color: #c2fbd7;
  border-radius: 100px;
  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;
  color: rgb(40, 243, 40); /* Green border color for focused button */
  cursor: pointer;
  display: inline-block;
  font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;
  padding: 7px 20px;
  text-align: center;
  text-decoration: none;
  transition: all 250ms;
  border: 0;
  font-size: 16px;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  margin-left: 10px;
}

.cool-text {
  font-family: 'Roboto', 'Impact'; /* Choose a stylish font */
  font-size: 24px; /* Adjust the font size as needed */
  color: #ffffff; /* Choose a cool text color */
  text-align: center; /* Center the text */
  padding: 10px; /* Add some padding for better aesthetics */
  border-radius: 5px; /* Round the corners of the text */
}

@keyframes firework {
  0% { transform: translate(var(--x), var(--initialY)); width: var(--initialSize); opacity: 1; }
  50% { width: 0.5vmin; opacity: 1; }
  100% { width: var(--finalSize); opacity: 0; }
}

.firework,
.firework::before,
.firework::after
{
  --initialSize: 0.5vmin;
  --finalSize: 45vmin;
  --particleSize: 0.2vmin;
  --color1: yellow;
  --color2: khaki;
  --color3: white;
  --color4: lime;
  --color5: gold;
  --color6: mediumseagreen;
  --y: 50vmin;
  --x: -50%;
  --initialY: 100vmin;
  content: "";
  animation: firework 2s infinite;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, var(--y));
  width: var(--initialSize);
  aspect-ratio: 1;
  background: 
    /*
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 0% 0%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 100% 0%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 100% 100%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 0% 100%,
    */
    
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 50% 0%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 100% 50%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 50% 100%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 0% 50%,
    
    /* bottom right */
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 80% 90%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 95% 90%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 90% 70%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 100% 60%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 55% 80%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 70% 77%,
    
    /* bottom left */
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 22% 90%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 45% 90%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 33% 70%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 10% 60%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 31% 80%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 28% 77%,
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 13% 72%,
    
    /* top left */
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 80% 10%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 95% 14%,
    radial-gradient(circle, var(--color2) var(--particleSize), #0000 0) 90% 23%,
    radial-gradient(circle, var(--color3) var(--particleSize), #0000 0) 100% 43%,
    radial-gradient(circle, var(--color4) var(--particleSize), #0000 0) 85% 27%,
    radial-gradient(circle, var(--color5) var(--particleSize), #0000 0) 77% 37%,
    radial-gradient(circle, var(--color6) var(--particleSize), #0000 0) 60% 7%,
    
    /* top right */
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 22% 14%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 45% 20%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 33% 34%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 10% 29%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 31% 37%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 28% 7%,
    radial-gradient(circle, var(--color1) var(--particleSize), #0000 0) 13% 42%
    ;
  background-size: var(--initialSize) var(--initialSize);
  background-repeat: no-repeat;
}

.firework::before {
  --x: -50%;
  --y: -50%;
  --initialY: -50%;
/*   transform: translate(-20vmin, -2vmin) rotate(40deg) scale(1.3) rotateY(40deg); */
  transform: translate(-50%, -50%) rotate(40deg) scale(1.3) rotateY(40deg);
/*   animation: fireworkPseudo 2s infinite; */
}

.footer{
  margin-top: 1rem;
  padding: 2rem;
  background-color: rgb(10, 20, 32);
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
}


.social-container {
  background: #eee;
  padding: 25px 50px;
  position: fixed;
}

a.social {
  margin: 0 1rem;
  transition: transform 250ms;
  display: inline-block;
}

a.social:hover {
  transform: translateY(-2px);
}

a.youtube {
  color: #eb3223;
  margin-right: 20px;
}

a.facebook {
  color: #4968ad;
}

a.twitter {
  color: #49a1eb;
  margin-left: -35rem;
  margin-right: -500px;
}

a.instagram {
  color: black;
}

a.discord {
  color: #7289d9;
  margin-left: -69rem;
}

.firework::after {
  --x: -50%;
  --y: -50%;
  --initialY: -50%;
/*   transform: translate(44vmin, -50%) rotate(170deg) scale(1.15) rotateY(-30deg); */
  transform: translate(-50%, -50%) rotate(170deg) scale(1.15) rotateY(-30deg);
/*   animation: fireworkPseudo 2s infinite; */
}

.firework:nth-child(2) {
  --x: -40vmin;
  --y: 0vmin
}

.firework:nth-child(2),
.firework:nth-child(2)::before,
.firework:nth-child(2)::after {
  --color1: rgb(200, 192, 255);
  --color2: violet;
  --color3: fuchsia;
  --color4: orchid;
  --color5: plum;
  --color6: lavender;  
  --finalSize: 40vmin;
  left: 80%;
  top: 60%;
  animation-delay: -0.25s;
}

.firework:nth-child(3) {
  --x: 50vmin;
  --y: 0vmin;
}

.firework:nth-child(3),
.firework:nth-child(3)::before,
.firework:nth-child(3)::after {
  --color1: cyan;
  --color2: lightcyan;
  --color3: lightblue;
  --color4: PaleTurquoise;
  --color5: SkyBlue;
  --color6: lavender;
  --finalSize: 35vmin;
  left: 90%;
  top: 100%;
  animation-delay: -0.4s;
}

.firework:nth-child(4) {
  --x: -50vmin;
  --y: 0vmin;
}

.firework:nth-child(4),
.firework:nth-child(4)::before,
.firework:nth-child(4)::after {
  /* Unique styles for the third firework */
  --color1: rgb(255, 0, 0);
  --color2: lightcyan;
  --color3: lightblue;
  --color4: PaleTurquoise;
  --color5: SkyBlue;
  --color6: lavender;
  --finalSize: 35vmin;
  left: 10%;
  top: 60%;
  animation-delay: -0.4s;
}

.firework:nth-child(5) {
  --x: 50vmin;
  --y: 0vmin;
}

.firework:nth-child(5),
.firework:nth-child(5)::before,
.firework:nth-child(5)::after {
  /* Unique styles for the third firework */
  --color1: rgb(4, 233, 0);
  --color2: lightcyan;
  --color3: lightblue;
  --color4: PaleTurquoise;
  --color5: SkyBlue;
  --color6: lavender;
  --finalSize: 35vmin;
  left: 10%;
  top: 100%;
  animation-delay: -0.25s;
}


/* Define the button styles */
.round-button {
  width: 40px; /* Adjust the width as needed */
  height: 40px; /* Adjust the height as needed */
  background-color: rgb(0, 0, 0); /* Gray background color */
  border: none;
  border-radius: 50%; /* Makes the button round */
  color: #fff; /* Text color */
  font-size: 18px; /* Adjust the font size as needed */
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background-color 0.3s ease; /* Smooth transition on hover */
  margin-left: 20px;
  margin-right: 20px;
}

.round-button.left::before {
  content: "<"; /* Content of the button */
  font-weight: bold;
  margin-right: 2px;
}
.round-button.right::before {
  content: ">"; /* Content of the button */
  font-weight: bold;
  margin-left: 2px;
}
/* Change button background color on hover */
.round-button:hover {
  background-color: #28f328 /* Darker gray on hover */
}

/* Optional: Add a right-facing arrow ">" using CSS pseudo-elements */
/* Optional: Adjust the spacing between the button and the arrow */
.round-button::after {
  margin-left: 4px; /* Adjust as needed */
}

.conf-container {
  width: 100%;
height: 100%;
}
.confetti {
width: 15px;
height: 15px;
background-color: #ff8f8f;
position: absolute;
left: 70%;
animation: confetti 5s cubic-bezier(0.25, 0.75, 0.5, 1) 0.3s infinite, confettiFadeIn 1s 0.5s forwards;
transform-origin: left top;
opacity: 0;
}
.confetti:nth-child(1) {
background-color: #f2d74e; right: 10%; animation-delay: 0;
}
.confetti:nth-child(2) {
background-color: #95c3de; left: 80%; animation-delay: 5s;
}
.confetti:nth-child(3) {
background-color: #ff9a91; left: 80%; animation-delay: 3s;
}
.confetti:nth-child(4) {
background-color: #ff98f0; left: 100%; animation-delay: 2.5s;
}
.confetti:nth-child(5) {
background-color: #5ad9ff; left: 80%; animation-delay: 2.3s;
}
.confetti:nth-child(6) {
background-color: #ff9a91; left: 40%; animation-delay: 1.9s;
}
.confetti:nth-child(7) {
background-color: #f2d74e; left: 40%; animation-delay: 1.5s;
}
.confetti:nth-child(8) {
background-color: #95c3de; left: 35%; animation-delay: 8s;
}
.confetti:nth-child(9) {
background-color: #91ebff; left: 85%; animation-delay: 3.5s;
}
.confetti:nth-child(10) {
background-color: #f2d74e; left: 25%; animation-delay: 9.1s;
}

.confetti:nth-child(11) {
  background-color: #fff290; left: 90%; animation-delay: 0.5s;
  }

@keyframes confetti {
0% { transform: rotateZ(15deg) rotateY(0deg) translate(0,0) }
25% { transform: rotateZ(5deg) rotateY(360deg) translate(-5vw,20vh); }
50% { transform: rotateZ(15deg) rotateY(720deg) translate(5vw,60vh); }
75% { transform: rotateZ(5deg) rotateY(1080deg) translate(-10vw,80vh); }
100% { transform: rotateZ(15deg) rotateY(1440deg) translate(10vw,110vh); }
}

@keyframes confettiFadeIn {
  0% {
    opacity: 0; /* Start invisible */
  }
  100% {
    opacity: 1; /* Gradually become visible */
  }
}
